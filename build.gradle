plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'application' // ✅ 이 라인을 추가하세요
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

allprojects{
	group = 'team9'
	version = '0.0.1-SNAPSHOT'
	repositories {
		mavenCentral()
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

subprojects{
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.asciidoctor.jvm.convert'

	dependencies {
//		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		compileOnly 'org.projectlombok:lombok'
//		runtimeOnly 'com.mysql:mysql-connector-j'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		implementation("org.springframework.boot:spring-boot-starter-web")
		implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

		//코루틴
		implementation "org.jetbrains.kotlin:kotlin-stdlib"
		implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1"

		// Pair 사용
		implementation 'org.apache.commons:commons-lang3:3.13.0'
		implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	}

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}
	application {
		mainClass = 'team9.demo.RoomGenieApplication'  // ✅ Spring Boot 3.x 방식
	}


	tasks.named('test') {
		useJUnitPlatform()
	}
}



