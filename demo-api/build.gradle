ext {
	snippetsDir = file('build/generated-snippets')
}


dependencies{
	runtimeOnly project(":demo-storage")
//	implementation project(":demo-storage") // runtimeOnly â†’ implementation ë³€ê²½
	implementation project(":demo-domain")
	implementation project(":demo-common")
	implementation project(":demo-external")
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation project(':api-docs')
	testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
	testImplementation("io.rest-assured:rest-assured") // (optional if using RestAssuredMockMvc)
	testImplementation("io.rest-assured:spring-mock-mvc") // (optional)
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	sourceDir = file('src/docs/asciidoc') // ðŸ‘ˆ index.adoc ìœ„ì¹˜ ì§€ì •
	outputDir = file("$buildDir/docs/asciidoc")
	inputs.dir snippetsDir
	dependsOn test

	attributes 'snippets': snippetsDir.absolutePath
	baseDirFollowsSourceDir()
}



tasks.register('copyAsciidoctor', Copy) {
	dependsOn asciidoctor
	from layout.buildDirectory.dir('docs/asciidoc')
	into layout.projectDirectory.dir('src/main/resources/static/docs')
}

build {
	dependsOn 'copyAsciidoctor'
}

bootJar {
	enabled = true
	dependsOn asciidoctor
	from('build/docs/asciidoc') {
		into 'static/docs'
	}
}

jar {
	enabled = false
}